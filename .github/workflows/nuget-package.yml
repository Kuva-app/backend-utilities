# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Nuget Package

on:
  push:
    branches: [ "master" ]

permissions:
  pull-requests: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.0.200
      - name: Restore dependencies
        run: dotnet restore ./Source/Utilities.sln
      - name: Build
        run: dotnet build ./Source/Utilities.sln --no-restore
      - name: Make directory
        run: mkdir -p ./output
      - name: Copy General utilities
        run: |
          cp ./Source/General/bin/Debug/netstandard2.1/*.* ./output
      - name: Copy Security utilities
        run: |
          cp ./Source/Security/bin/Debug/net9.0/*.* ./output
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Project files
          path: |
            ./output/**/*.*

  # quality-gate:
  #   runs-on: windows-latest
  #   needs: build
  #   steps:
  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v4
  #       with:
  #         java-version: 17
  #         distribution: 'zulu' Alternative distribution options are available.
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0  Shallow clones should be disabled for a better relevancy of analysis
  #     - name: Cache SonarQube Cloud packages
  #       uses: actions/cache@v4
  #       with:
  #         path: ~\sonar\cache
  #         key: ${{ runner.os }}-sonar
  #         restore-keys: ${{ runner.os }}-sonar
  #     - name: Cache SonarQube Cloud scanner
  #       id: cache-sonar-scanner
  #       uses: actions/cache@v4
  #       with:
  #         path: .\.sonar\scanner
  #         key: ${{ runner.os }}-sonar-scanner
  #         restore-keys: ${{ runner.os }}-sonar-scanner
  #     - name: Install SonarQube Cloud scanner
  #       if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
  #       shell: powershell
  #       run: | 
  #         New-Item -Path .\.sonar\scanner -ItemType Directory
  #         dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
  #     - name: Build and analyze
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #         shell: powershell
  #       run: |
  #         .\.sonar\scanner\dotnet-sonarscanner begin /k:"Kuva-app_backend-utilities" /o:"kuva-app" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
  #         dotnet build
  #         .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  quality-gate:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.0.200
      - name: Analyze with SonarCloud
        uses: SonarSource/sonarcloud-github-action@4006f663ecaf1f8093e8e4abb9227f6041f52216
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args:
            -Dsonar.projectKey="Kuva-app_backend-utilities"
            -Dsonar.organization="kuva-app"
          projectBaseDir: .

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.0.200
      - name: Restore dependencies
        run: dotnet restore ./Source/Utilities.sln
      - name: Build
        run: dotnet build ./Source/UtilitiesTest/UtilitiesTest.csproj --no-restore
      - name: Test
        run: dotnet test ./Source/UtilitiesTest/UtilitiesTest.csproj --no-build --verbosity normal
